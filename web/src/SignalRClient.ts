import * as SignalR from "@microsoft/signalr";

/**
 * This service sets up the SignalR connection to Azure SignalR.  The connection to the
 * local hub will result in a redirect to the Azure SignalR endpoint with an access
 * token generated by the middleware.  You can also generate this token yourself (see
 * the README) if you'd prefer.
 */
class SignalRService {
  /**
   * Build and start the connection to Azure SignalR.
   * @param idToken An ID token if we are managing auth.
   */
  public async connect(idToken: string) {
    const connection = new SignalR.HubConnectionBuilder()
      .withUrl(`http://localhost:5092/notifications/`, {
        // The token here does nothing since we do not have authorization set
        // on the hub.  See the dn6-react-mongo-valtio repo for a more complete
        // implementation.
        accessTokenFactory: () => idToken
      })
      .configureLogging(SignalR.LogLevel.Trace)
      .withAutomaticReconnect()
      .build();

    console.log("Connected SignalR");

    // This matches the hub definition on the server.  When we invoke this
    // oin the server in the route /echo/{message}.  This side is the "subscription"
    connection.on("Send", (msg: string) => {
      console.log(`Received: ${msg}`);
    });

    connection.start();
  }
}

export const signalRService = new SignalRService();
